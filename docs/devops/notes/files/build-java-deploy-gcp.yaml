name: Build and deploy Docker images to AWS ECR GCP

on:
    push:
        branches:
            - main
    workflow_dispatch:

jobs:
    build_deploy:
        runs-on: ubuntu-latest

        steps:
            - 
                name: Check out code
                uses: actions/checkout@v3

            - 
                name: Set up JDK 21
                uses: actions/setup-java@v4
                with:
                    java-version: "21"
                    distribution: "temurin"
                cache: "maven"

            - 
                uses: azure/setup-kubectl@v4
                with:
                    version: "v1.32.3" # default is latest stable
                id: install

            - 
                name: Authenticate to Google Cloud
                uses: google-github-actions/auth@v1
                with:
                    credentials_json: ${{ secrets.GCP_SA_KEY }}

            - 
                name: Setup gcloud CLI
                uses: google-github-actions/setup-gcloud@v2
                with:
                    version: "latest"
                    project_id: ecmsp

            - 
                name: Install gcloud auth
                run: gcloud components install gke-gcloud-auth-plugin

            -   
                name: Configure kubectl
                run: gcloud container clusters get-credentials CLASTER_NAME --region europe-west2

            - 
                name: Build, tag, and push backend Docker image to GCP Registry TODO
                env:
                    ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                    ECR_REPOSITORY: rockcom/backend
                    IMAGE_TAG: ${{ github.sha }}
                run: |
                    docker build \
                    -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
                    -t $ECR_REGISTRY/$ECR_REPOSITORY:latest \
                    -f ./backend/Dockerfile ./backend

                    docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

            - 
                name: Deploy image to Amazon EKS
                id: deploy
                continue-on-error: true
                run: kubectl rollout restart deployment DEPLOYMENT_NAME

            - 
                name: Rollback if deploy failed
                if: steps.deploy.outcome == 'failure'
                run: |
                    echo "Deployment failed. Rolling back..."
                    kubectl rollout undo deployment DEPLOYMENT_NAME


# - name: Configure Docker authentication for GCR
#   run: gcloud auth configure-docker